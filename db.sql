CREATE TABLE "categories" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "name" varchar(100) NOT NULL,
  "description" text,
  "is_active" boolean DEFAULT true,
  "created_at" timestamp DEFAULT (now()),
  "updated_at" timestamp DEFAULT (now())
);

CREATE TABLE "suppliers" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "name" varchar(100) NOT NULL,
  "contact_person" varchar(100),
  "phone" varchar(20),
  "email" varchar(100),
  "address" text,
  "city" varchar(50),
  "country" varchar(50),
  "postal_code" varchar(10),
  "is_active" boolean DEFAULT true,
  "created_at" timestamp DEFAULT (now()),
  "updated_at" timestamp DEFAULT (now())
);

CREATE TABLE "customers" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "first_name" varchar(100) NOT NULL,
  "last_name" varchar(100),
  "email" varchar(100),
  "phone" varchar(20),
  "address" text,
  "city" varchar(50),
  "country" varchar(50),
  "postal_code" varchar(10),
  "customer_type" enum(retail,wholesale,corporate) DEFAULT 'retail',
  "is_active" boolean DEFAULT true,
  "created_at" timestamp DEFAULT (now()),
  "updated_at" timestamp DEFAULT (now())
);

CREATE TABLE "users" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "name" varchar(255) NOT NULL,
  "email" varchar(100) UNIQUE NOT NULL,
  "avatarUrl" varchar(225) UNIQUE NOT NULL,
  "role" enum(admin,seller,viewer) NOT NULL,
  "is_active" boolean DEFAULT true,
  "password" varchar(225) NOT NULL,
  "created_at" timestamp DEFAULT (now()),
  "updated_at" timestamp DEFAULT (now())
);

CREATE TABLE "products" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "sku" varchar(50) UNIQUE NOT NULL,
  "name" varchar(100) NOT NULL,
  "description" text,
  "category_id" int,
  "purchase_price" decimal(10,2) NOT NULL,
  "selling_price" decimal(10,2) NOT NULL,
  "profit_margin" decimal(5,2),
  "minimum_stock" int DEFAULT 5,
  "maximum_stock" int DEFAULT 100,
  "location" varchar(50),
  "weight" decimal(8,2),
  "dimensions" varchar(100),
  "barcode" varchar(100),
  "image_url" varchar(255),
  "is_active" boolean DEFAULT true,
  "created_at" timestamp DEFAULT (now()),
  "updated_at" timestamp DEFAULT (now())
);

CREATE TABLE "inventory" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "product_id" int,
  "current_quantity" int NOT NULL DEFAULT 0,
  "reserved_quantity" int DEFAULT 0,
  "available_quantity" int,
  "average_cost" decimal(10,2),
  "last_inbound" timestamp,
  "last_outbound" timestamp,
  "updated_at" timestamp DEFAULT (now())
);

CREATE TABLE "inventory_movements" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "product_id" int,
  "movement_type" enum(inbound,outbound,adjustment,waste) NOT NULL,
  "reference_type" enum(purchase,sale,manual_adjustment,waste) NOT NULL,
  "reference_id" int,
  "quantity" int NOT NULL,
  "unit_cost" decimal(10,2),
  "reason" varchar(255),
  "user_id" int,
  "movement_date" timestamp DEFAULT (now())
);

CREATE TABLE "purchases" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "purchase_number" varchar(20) UNIQUE NOT NULL,
  "supplier_id" int,
  "purchase_date" date NOT NULL,
  "delivery_date" date,
  "status" enum(pending,received,partial,cancelled) DEFAULT 'pending',
  "subtotal" decimal(12,2) NOT NULL,
  "taxes" decimal(12,2) DEFAULT 0,
  "discount" decimal(12,2) DEFAULT 0,
  "total" decimal(12,2) NOT NULL,
  "notes" text,
  "user_id" int,
  "created_at" timestamp DEFAULT (now()),
  "updated_at" timestamp DEFAULT (now())
);

CREATE TABLE "purchase_details" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "purchase_id" int,
  "product_id" int,
  "quantity" int NOT NULL,
  "unit_price" decimal(10,2) NOT NULL,
  "subtotal" decimal(12,2) NOT NULL,
  "received_quantity" int DEFAULT 0,
  "created_at" timestamp DEFAULT (now())
);

CREATE TABLE "sales" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "sale_number" varchar(20) UNIQUE NOT NULL,
  "customer_id" int,
  "sale_date" datetime NOT NULL,
  "status" enum(pending,completed,cancelled,returned) DEFAULT 'pending',
  "subtotal" decimal(12,2) NOT NULL,
  "taxes" decimal(12,2) DEFAULT 0,
  "discount" decimal(12,2) DEFAULT 0,
  "total" decimal(12,2) NOT NULL,
  "payment_method" enum(cash,card,transfer,credit) NOT NULL,
  "notes" text,
  "user_id" int,
  "created_at" timestamp DEFAULT (now()),
  "updated_at" timestamp DEFAULT (now())
);

CREATE TABLE "sale_details" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "sale_id" int,
  "product_id" int,
  "quantity" int NOT NULL,
  "unit_price" decimal(10,2) NOT NULL,
  "subtotal" decimal(12,2) NOT NULL,
  "created_at" timestamp DEFAULT (now())
);

CREATE TABLE "wastes" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "waste_number" varchar(20) UNIQUE NOT NULL,
  "waste_date" date NOT NULL,
  "reason" enum(expiration,damage,obsolescence,theft,loss) NOT NULL,
  "description" text,
  "total_cost" decimal(12,2) NOT NULL,
  "user_id" int,
  "created_at" timestamp DEFAULT (now())
);

CREATE TABLE "waste_details" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "waste_id" int,
  "product_id" int,
  "quantity" int NOT NULL,
  "unit_cost" decimal(10,2) NOT NULL,
  "subtotal" decimal(12,2) NOT NULL,
  "notes" text,
  "created_at" timestamp DEFAULT (now())
);

COMMENT ON COLUMN "inventory"."available_quantity" IS 'current_quantity - reserved_quantity';

COMMENT ON COLUMN "inventory_movements"."reference_id" IS 'ID from referenced table';

ALTER TABLE "products" ADD FOREIGN KEY ("category_id") REFERENCES "categories" ("id");

ALTER TABLE "inventory" ADD FOREIGN KEY ("product_id") REFERENCES "products" ("id");

ALTER TABLE "inventory_movements" ADD FOREIGN KEY ("product_id") REFERENCES "products" ("id");

ALTER TABLE "inventory_movements" ADD FOREIGN KEY ("user_id") REFERENCES "users" ("id");

ALTER TABLE "purchases" ADD FOREIGN KEY ("supplier_id") REFERENCES "suppliers" ("id");

ALTER TABLE "purchases" ADD FOREIGN KEY ("user_id") REFERENCES "users" ("id");

ALTER TABLE "purchase_details" ADD FOREIGN KEY ("purchase_id") REFERENCES "purchases" ("id");

ALTER TABLE "purchase_details" ADD FOREIGN KEY ("product_id") REFERENCES "products" ("id");

ALTER TABLE "sales" ADD FOREIGN KEY ("customer_id") REFERENCES "customers" ("id");

ALTER TABLE "sales" ADD FOREIGN KEY ("user_id") REFERENCES "users" ("id");

ALTER TABLE "sale_details" ADD FOREIGN KEY ("sale_id") REFERENCES "sales" ("id");

ALTER TABLE "sale_details" ADD FOREIGN KEY ("product_id") REFERENCES "products" ("id");

ALTER TABLE "wastes" ADD FOREIGN KEY ("user_id") REFERENCES "users" ("id");

ALTER TABLE "waste_details" ADD FOREIGN KEY ("waste_id") REFERENCES "wastes" ("id");

ALTER TABLE "waste_details" ADD FOREIGN KEY ("product_id") REFERENCES "products" ("id");
